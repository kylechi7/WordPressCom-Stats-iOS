#import "WPSViewController.h"
#import <StatsTableViewController.h>
#import "SFHFKeychainUtils.h"

@implementation WPSViewController

NSString *const WPStatsTodayWidgetOAuth2TokenKeychainUsername = @"OAuth2Token";
NSString *const WPStatsTodayWidgetOAuth2TokenKeychainServiceName = @"TodayWidget";
NSString *const WPStatsTodayWidgetUserDefaultsSiteIdKey = @"WordPressTodayWidgetSiteId";
NSString *const WPStatsTodayWidgetUserDefaultsSiteNameKey = @"WordPressTodayWidgetSiteName";
NSString *const WPStatsTodayWidgetUserDefaultsSiteTimeZoneKey = @"WordPressTodayWidgetTimeZone";
NSString *const WPAppGroupName = @"group.org.wordpress.internal";
NSString *const WPStatsTodayWidgetOAuth2TokenKeychainAccessGroup = @"99KV9Z6BKV.org.wordpress.internal";

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    // First check to see if the Internal Beta entitlements pick up any auth tokens and site IDs
    NSUserDefaults *sharedDefaults = [[NSUserDefaults alloc] initWithSuiteName:WPAppGroupName];
    NSNumber *siteId = [sharedDefaults objectForKey:WPStatsTodayWidgetUserDefaultsSiteIdKey];
    NSString *timeZoneName = [sharedDefaults stringForKey:WPStatsTodayWidgetUserDefaultsSiteTimeZoneKey];
    NSError *error = nil;
    NSString *oauth2Token = [SFHFKeychainUtils getPasswordForUsername:WPStatsTodayWidgetOAuth2TokenKeychainUsername
                                                       andServiceName:WPStatsTodayWidgetOAuth2TokenKeychainServiceName
                                                          accessGroup:WPStatsTodayWidgetOAuth2TokenKeychainAccessGroup
                                                                error:&error];
    
    NSTimeZone *timeZone = nil;
    
    if (!siteId || error || timeZoneName.length == 0) {
        NSLog(@"Unable to retrieve auth from WordPress Internal Today Widget.  Using defaults.");

#warning You have to replace the site ID, timezone & OAuth2 token with one generated by the WP.com API
        oauth2Token = @"";
        siteId = @0;
        timeZone = [NSTimeZone timeZoneWithName:@"America/Chicago"];
    } else {
        timeZone = [NSTimeZone timeZoneWithName:timeZoneName];
    }
    
    UINavigationController *navController = [[UIStoryboard storyboardWithName:@"SiteStats" bundle:nil] instantiateInitialViewController];
    StatsTableViewController *statsViewController = (StatsTableViewController *)[navController topViewController];
    statsViewController.siteID = siteId;
    statsViewController.siteTimeZone = timeZone;
    statsViewController.oauth2Token = oauth2Token;
    
    [self addChildViewController:navController];
    [self.view addSubview:[navController view]];
}

@end
